"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const jwt_config_1 = require("../Config/jwt_config");
const technicianController_1 = __importDefault(require("../Controllers/technicianController"));
const technicianService_1 = __importDefault(require("../Services/technicianService"));
const technicianRepository_1 = __importDefault(require("../Repository/technicianRepository"));
const technicianModel_1 = __importDefault(require("../Model/technicianModel"));
const reviewModal_1 = __importDefault(require("../Model/reviewModal"));
const bookingModel_1 = __importDefault(require("../Model/bookingModel"));
const walletRepository_1 = __importDefault(require("../Repository/walletRepository"));
const walletModal_1 = __importDefault(require("../Model/walletModal"));
const userRepository_1 = __importDefault(require("../Repository/userRepository"));
const userModal_1 = __importDefault(require("../Model/userModal"));
const userAuth_1 = __importDefault(require("../Middleware/userAuth"));
const technicianRepository = new technicianRepository_1.default(technicianModel_1.default, reviewModal_1.default, bookingModel_1.default);
const walletRepository = new walletRepository_1.default(walletModal_1.default);
const userRepository = new userRepository_1.default(userModal_1.default, bookingModel_1.default, reviewModal_1.default);
const technicianService = new technicianService_1.default(technicianRepository, walletRepository, userRepository);
const technicianController = new technicianController_1.default(technicianService);
const router = (0, express_1.Router)();
router.get("/fetchTechnicianInformation", jwt_config_1.verifyToken, userAuth_1.default, technicianController.getTechnicianInfo);
router.patch("/joinTechnician", jwt_config_1.verifyToken, userAuth_1.default, technicianController.createTechnician);
router.patch("/changeprofession", jwt_config_1.verifyToken, userAuth_1.default, technicianController.updateProfession);
router.patch("/changeAvailabilityStatus", jwt_config_1.verifyToken, userAuth_1.default, technicianController.updateAvailableStatus);
router.get("/fetchTechnicianBookingHistory", jwt_config_1.verifyToken, userAuth_1.default, technicianController.getBookings);
router.get("/fetchingIndividualBookingDetails", jwt_config_1.verifyToken, userAuth_1.default, technicianController.getBookingDetails);
router.patch("/acceptRejectCancelNewBooking", jwt_config_1.verifyToken, userAuth_1.default, technicianController.updateBookingStatus);
router.post("/confirmBooking", jwt_config_1.verifyToken, userAuth_1.default, technicianController.completeBooking);
router.patch("/clearNotification", jwt_config_1.verifyToken, userAuth_1.default, technicianController.deleteNotification);
router.patch("/modifyAvailableSlots", jwt_config_1.verifyToken, userAuth_1.default, technicianController.updateAvailableSlots);
router.get("/wallet", jwt_config_1.verifyToken, userAuth_1.default, technicianController.getWallet);
router.get("/fetchningRatingWithReviewerDetails", jwt_config_1.verifyToken, userAuth_1.default, technicianController.getRatingWithReviewerDetails);
exports.default = router;
